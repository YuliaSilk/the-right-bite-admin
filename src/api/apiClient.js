const API_BASE = "https://right-bite-store.onrender.com/api/v1";

let accessToken = import.meta.env.VITE_ACCESS_TOKEN || localStorage.getItem("accessToken");
let refreshToken = import.meta.env.VITE_REFRESH_TOKEN || localStorage.getItem("refreshToken");

// –£–Ω—ñ–≤–µ—Ä—Å–∞–ª—å–Ω–∏–π –∑–∞–ø–∏—Ç
export async function apiFetch(endpoint, options = {}) {
  const headers = {
    "Content-Type": "application/json",
    Authorization: accessToken ? `Bearer ${accessToken}` : undefined,
    ...options.headers,
  };

  const response = await fetch(`${API_BASE}${endpoint}`, {
    ...options,
    headers,
  });

  // –Ø–∫—â–æ —Ç–æ–∫–µ–Ω –ø—Ä–æ—Å—Ç—Ä–æ—á–µ–Ω–∏–π ‚Äî –æ–Ω–æ–≤–ª—é—î–º–æ
  if (response.status === 401 && refreshToken) {
    console.warn("‚ö†Ô∏è Access token expired. Trying to refresh...");

    const refreshed = await refreshAccessToken();
    if (refreshed) {
      // –ü–æ–≤—Ç–æ—Ä—é—î–º–æ –∑–∞–ø–∏—Ç –∑ –æ–Ω–æ–≤–ª–µ–Ω–∏–º —Ç–æ–∫–µ–Ω–æ–º
      const retryHeaders = {
        ...headers,
        Authorization: `Bearer ${accessToken}`,
      };
      const retryResponse = await fetch(`${API_BASE}${endpoint}`, {
        ...options,
        headers: retryHeaders,
      });
      return retryResponse.json();
    } else {
      throw new Error("‚ùå Unable to refresh token. Please log in again.");
    }
  }

  if (!response.ok) {
    const text = await response.text();
    throw new Error(`HTTP ${response.status}: ${text}`);
  }
//   console.log('orders:', response)

  return response.json();
}

// üîÅ –§—É–Ω–∫—Ü—ñ—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è accessToken
async function refreshAccessToken() {
  try {
    const res = await fetch(`${API_BASE}/auth/refresh`, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ refreshToken }),
    });

    if (!res.ok) return false;

    const data = await res.json();
    accessToken = data.accessToken;

    // –∑–±–µ—Ä—ñ–≥–∞—î–º–æ –æ–Ω–æ–≤–ª–µ–Ω–∏–π —Ç–æ–∫–µ–Ω
    localStorage.setItem("accessToken", data.accessToken);
    console.log("‚úÖ Access token refreshed");

    return true;
  } catch (err) {
    console.error("‚ùå Refresh token failed:", err);
    localStorage.removeItem("accessToken");
    localStorage.removeItem("refreshToken");
    return false;
  }
}